{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_messageRouter",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "addStake",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "slotNumber",
						"type": "uint256"
					}
				],
				"name": "castVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finishRecommendation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finishVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMaximumCandidateNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTopCandidates",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "value",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "recommender",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "totalVote",
								"type": "uint256"
							}
						],
						"internalType": "struct Leader.Candidate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "value",
						"type": "string"
					}
				],
				"name": "recieveRecommender",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "selectRandomMiner",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxCandiateNumber",
						"type": "uint256"
					}
				],
				"name": "setMaximumCandidateNumber",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"message/concensus/Leader.sol": "Leader"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"message/concensus/Leader.sol": {
			"keccak256": "0xe0dd1d6fc075ffe3bc9dec7d09febc20b7cdfc5594d5412c22405dddb7671ff1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://6004808366242c75a384c08138451f27c95adbcd955cb15d7fdf45b8f9f47a39",
				"dweb:/ipfs/QmTmF2QD74E5BTj6vVV6o7AMajYMrZbpJi5XKUXc9ok82c"
			]
		}
	},
	"version": 1
}